<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="1" total="18" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="test1" duration-ms="11797" started-at="2020-06-12T11:38:38 CDT" finished-at="2020-06-12T11:38:49 CDT">
    <groups>
    </groups>
    <test name="Test One" duration-ms="11797" started-at="2020-06-12T11:38:38 CDT" finished-at="2020-06-12T11:38:49 CDT">
      <class name="com.mastercard.mdcc.employee.testcases.TC004_PUT_EmployeeRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC004_PUT_EmployeeRecord@4b1c1ea0]" name="setup" is-config="true" duration-ms="8" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC004_PUT_EmployeeRecord@4b1c1ea0]" name="beforeClass" is-config="true" duration-ms="2476" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:48 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="modifyEmployeeRecord()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC004_PUT_EmployeeRecord@4b1c1ea0]" name="modifyEmployeeRecord" duration-ms="5" started-at="2020-06-12T11:38:48 CDT" finished-at="2020-06-12T11:38:48 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modifyEmployeeRecord -->
      </class> <!-- com.mastercard.mdcc.employee.testcases.TC004_PUT_EmployeeRecord -->
      <class name="com.mastercard.mdcc.employee.testcases.TC005_Delet_EmployeeRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC005_Delet_EmployeeRecord@17579e0f]" name="setup" is-config="true" duration-ms="11" started-at="2020-06-12T11:38:48 CDT" finished-at="2020-06-12T11:38:48 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC005_Delet_EmployeeRecord@17579e0f]" name="getAllEmployees" is-config="true" duration-ms="981" started-at="2020-06-12T11:38:48 CDT" finished-at="2020-06-12T11:38:49 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkResponseCode()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC005_Delet_EmployeeRecord@17579e0f]" name="checkResponseCode" duration-ms="6" started-at="2020-06-12T11:38:49 CDT" finished-at="2020-06-12T11:38:49 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseCode -->
        <test-method status="PASS" signature="quit()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC005_Delet_EmployeeRecord@17579e0f]" name="quit" is-config="true" duration-ms="4" started-at="2020-06-12T11:38:49 CDT" finished-at="2020-06-12T11:38:49 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.mastercard.mdcc.employee.testcases.TC005_Delet_EmployeeRecord -->
      <class name="dataDrivenTesting.DataDriven_AddNewEmp">
        <test-method status="PASS" signature="createNewEmployee(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataDrivenTesting.DataDriven_AddNewEmp@74650e52]" name="createNewEmployee" duration-ms="2965" started-at="2020-06-12T11:38:38 CDT" data-provider="getData" finished-at="2020-06-12T11:38:41 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[name5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewEmployee -->
        <test-method status="PASS" signature="createNewEmployee(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataDrivenTesting.DataDriven_AddNewEmp@74650e52]" name="createNewEmployee" duration-ms="457" started-at="2020-06-12T11:38:41 CDT" data-provider="getData" finished-at="2020-06-12T11:38:41 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[name6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewEmployee -->
        <test-method status="PASS" signature="createNewEmployee(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataDrivenTesting.DataDriven_AddNewEmp@74650e52]" name="createNewEmployee" duration-ms="511" started-at="2020-06-12T11:38:41 CDT" data-provider="getData" finished-at="2020-06-12T11:38:42 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[name7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewEmployee -->
      </class> <!-- dataDrivenTesting.DataDriven_AddNewEmp -->
      <class name="com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="setup" is-config="true" duration-ms="88" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="getAllEmployees" is-config="true" duration-ms="319" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="checkContentEncoding" duration-ms="3" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="checkContentLength" duration-ms="4" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="checkCookies" duration-ms="3" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="checkResponseBody" duration-ms="6" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseCode()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="checkResponseCode" duration-ms="3" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseCode -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="checkResponseTime" duration-ms="4" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="quit()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees@15d0c81b]" name="quit" is-config="true" duration-ms="1" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:42 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.mastercard.mdcc.employee.testcases.TC001_Get_All_Employees -->
      <class name="com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="setUp" is-config="true" duration-ms="2514" started-at="2020-06-12T11:38:42 CDT" finished-at="2020-06-12T11:38:45 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="parseJsonResponse()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="parseJsonResponse" duration-ms="958" started-at="2020-06-12T11:38:45 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parseJsonResponse -->
        <test-method status="FAIL" signature="verifyHeaderContentEncoding()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="verifyHeaderContentEncoding" duration-ms="5" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[Header Content-Encoding in the Response is:  expected:<gzip> but was:<null>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: Header Content-Encoding in the Response is:  expected:<gzip> but was:<null>
at junit.framework.Assert.assertEquals(Assert.java:81)
at com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord.verifyHeaderContentEncoding(TC003_POST_EmployeeRecord.java:82)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderContentEncoding -->
        <test-method status="FAIL" signature="verifyHeaderContentType()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="verifyHeaderContentType" duration-ms="14" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[Header ContentType in the Response is:  expected:<text/html; charset=iso-8859-1> but was:<application/json;charset=utf-8>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: Header ContentType in the Response is:  expected:<text/html; charset=iso-8859-1> but was:<application/json;charset=utf-8>
at junit.framework.Assert.assertEquals(Assert.java:81)
at com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord.verifyHeaderContentType(TC003_POST_EmployeeRecord.java:76)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderContentType -->
        <test-method status="PASS" signature="verifyHeaderServer()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="verifyHeaderServer" duration-ms="7" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderServer -->
        <test-method status="PASS" signature="verifyResponseBody()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="verifyResponseBody" duration-ms="19" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseBody -->
        <test-method status="PASS" signature="verifyStatusCode()[pri:0, instance:com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord@6acdbdf5]" name="verifyStatusCode" duration-ms="1" started-at="2020-06-12T11:38:46 CDT" finished-at="2020-06-12T11:38:46 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStatusCode -->
      </class> <!-- com.mastercard.mdcc.employee.testcases.TC003_POST_EmployeeRecord -->
    </test> <!-- Test One -->
  </suite> <!-- test1 -->
</testng-results>
